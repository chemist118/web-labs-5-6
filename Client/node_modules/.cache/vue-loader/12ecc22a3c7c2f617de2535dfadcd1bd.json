{"remainingRequest":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\views\\RegistrationPage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\views\\RegistrationPage.vue","mtime":1575649194000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKbGFiZWwgewogICAgZmxvYXQ6IGxlZnQ7Cn0KCi5jb250YWluZXIgewogICAgbWluLWhlaWdodDogY2FsYyg3MDBweCAtIDV2aCAtIDNyZW0pOwogICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAxMi41cmVtIC0gNXZoKTsKICAgIG1heC13aWR0aDogY2FsYygxMDAlIC0gNDB2dyk7Cn0KCg=="},{"version":3,"sources":["RegistrationPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"RegistrationPage.vue","sourceRoot":"src/components/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <section class=\"card card-default w-50 mx-auto\">\n            <h4 class=\"card-header alert-info text-center\">Registration</h4>\n            <form class=\"card-body\" @submit.prevent=\"onSubmit\">\n\t\t\t\t<b-alert variant=\"danger\"\n\t\t\t\t\t\t :show=\"dismissCountDown\"\n\t\t\t\t\t\t dismissible fade\n\t\t\t\t\t\t @dismiss-count-down=\"countDownChanged\">\n\t\t\t\t\t{{ textAlert }}\n\t\t\t\t</b-alert>\n\t\t\t\t<b-alert variant=\"success\"\n\t\t\t\t\t\t :show=\"dismissCountDownGood\"\n\t\t\t\t\t\t dismissible fade\n\t\t\t\t\t\t @dismiss-count-down=\"countDownChangedGood\">\n\t\t\t\t\t{{ textAlert }}\n\t\t\t\t</b-alert>\n\n\n\t\t\t\t<div class=\"form-group\">\n                    <label for=\"login-input\">Username:</label>\n                    <input type=\"text\" name=\"login\" class=\"form-control\" id=\"login-input\" placeholder=\"Username\"\n                           v-model=\"login\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password-input\">Password:</label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password-input\"\n                           placeholder=\"******\" v-model=\"password1\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password2-input\">Password confirmation:</label>\n                    <input type=\"password\" name=\"password2\" class=\"form-control\" id=\"password2-input\"\n                           placeholder=\"******\" v-model=\"password2\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n            </form>\n        </section>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        name: 'Registration',\n        data() {\n            return {\n                login: '',\n\t\t\t\ttextAlert: '',\n                password1: '',\n                password2: '',\n                dismissSecs: 4,\n                dismissCountDown: 0,\n\t\t\t\tdismissCountDownGood: 0\n            }\n        },\n        computed: {\n            getError() {\n                return this.$store.getters.registrationError;\n            }\n        },\n        async created() {\n            if (this.getError !== null) {\n                await this.$store.dispatch('SET_ERROR', {type: 'registration', error: null});\n            }\n        },\n        methods: {\n            countDownChanged(dismissCountDown) {\n                this.dismissCountDown = dismissCountDown;\n            },\n\t\t\tcountDownChangedGood(dismissCountDownGood) {\n\t\t\t\tthis.dismissCountDownGood = dismissCountDownGood;\n\t\t\t},\n            showAlert(good) {\n            \tif (good) {\n\t\t\t\t\tthis.dismissCountDown = 0;\n\t\t\t\t\tthis.dismissCountDownGood = this.dismissSecs;\n\t\t\t\t\tthis.textAlert = 'You are successfully registered';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.dismissCountDownGood = 0;\n\t\t\t\t\tthis.dismissCountDown = this.dismissSecs;\n\t\t\t\t\tthis.textAlert = this.getError;\n\t\t\t\t}\n            },\n            async onSubmit() {\n                let login = this.login === undefined ? '' : this.login.trim();\n                let password1 = this.password1 === undefined ? '' : this.password1.trim();\n                let password2 = this.password2 === undefined ? '' : this.password2.trim();\n\n                await fetch(`http://localhost:5000/registration`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        login: login,\n                        password1: password1,\n                        password2: password2\n                    }),\n                    headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                    .then(response => {\n                        if (response.status === 200) {\n                            response.json()\n                                .then(json => {\n\t\t\t\t\t\t\t\t\tthis.showAlert(true);\n                                });\n                        } else {\n                            response.json()\n                                .then(json => {\n                                    this.$store.dispatch('SET_ERROR', {type: 'registration', error: json.error});\n                                    this.showAlert(false);\n                                });\n                        }\n                    })\n                    .catch(error => {\n                        this.$store.dispatch('SET_ERROR', {type: 'registration', error: error});\n                        this.showAlert(false);\n                    });\n            }\n        }\n    }\n</script>\n\n\n<style>\n\n    label {\n        float: left;\n    }\n\n    .container {\n        min-height: calc(700px - 5vh - 3rem);\n        height: calc(100% - 12.5rem - 5vh);\n        max-width: calc(100% - 40vw);\n    }\n\n</style>"]}]}