{"remainingRequest":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\AddTodo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\AddTodo.vue","mtime":1607003002881},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5teS1yb3djYXJkIHsKICAgIG1pbi1oZWlnaHQ6IGNhbGMoNzAwcHggLSA1dmggLSAzcmVtKTsKICAgIG1heC13aWR0aDogY2FsYygxMDAlIC0gNTB2dyk7Cn0KCmJ1dHRvbiB7CiAgICBmbG9hdDogbGVmdDsKfQoKbGFiZWwgewogICAgZmxvYXQ6IGxlZnQ7Cn0KCg=="},{"version":3,"sources":["AddTodo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"AddTodo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"rowcard my-rowcard card-default col-sm\">\n\n        <h4 class=\"alert alert-info text-left\">Добавление задачи</h4>\n        <form @submit.prevent=\"onSubmit\">\n\t\t\t<b-alert variant=\"danger\"\n\t\t\t\t\t :show=\"dismissCountDown\"\n\t\t\t\t\t dismissible fade\n\t\t\t\t\t @dismiss-count-down=\"countDownChanged\">\n\t\t\t\t{{ textAlert }}\n\t\t\t</b-alert>\n\t\t\t<b-alert variant=\"success\"\n\t\t\t\t\t :show=\"dismissCountDownGood\"\n\t\t\t\t\t dismissible fade\n\t\t\t\t\t @dismiss-count-down=\"countDownChangedGood\">\n\t\t\t\t{{ textAlert }}\n\t\t\t</b-alert>\n\n            <div class=\"form-group\">\n                <label for=\"title-input\">Заголовок:</label>\n                <input type=\"text\" class=\"form-control\" id=\"title-input\" placeholder=\"Заголовок задачи\" v-model=\"title\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"description-input\">Описание:</label>\n                <input type=\"text\" class=\"form-control\" id=\"description-input\" placeholder=\"Описание\"\n                       v-model=\"description\">\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary text-center\">Добавить</button>\n        </form>\n    </div>\n\n</template>\n\n<script>\n\n    export default {\n        name: \"AddTodo\",\n        data() {\n            return {\n                title: '',\n\t\t\t\ttextAlert: '',\n                description: '',\n                dismissSecs: 4,\n                dismissCountDown: 0,\n\t\t\t\tdismissSecsGood: 4,\n\t\t\t\tdismissCountDownGood: 0\n            }\n        },\n        computed: {\n            getUser() {\n                return this.$store.getters.user;\n            },\n            todoList() {\n                return this.$store.getters.TODOS;\n            },\n            getError() {\n                return this.$store.getters.addError;\n            }\n        },\n        async created() {\n            await this.$store.dispatch('SET_ERROR', {type: 'edit', error: null});\n            if (this.getError !== null ){\n            \tconsole.log(this.getError);\n                this.showAlert();\n                await setTimeout(function () {\n                    this.$store.dispatch('SET_ERROR', {type: 'add', error: null});\n                }.bind(this), 5000);\n            }\n        },\n        methods: {\n            countDownChanged(dismissCountDown) {\n                this.dismissCountDown = dismissCountDown\n            },\n\t\t\tcountDownChangedGood(dismissCountDownGood) {\n\t\t\t\tthis.dismissCountDownGood = dismissCountDownGood;\n\t\t\t},\n\t\t\tshowAlert(good) {\n\t\t\t\tif (good) {\n\t\t\t\t\tthis.dismissCountDown = 0;\n\t\t\t\t\tthis.dismissCountDownGood = this.dismissSecs;\n\t\t\t\t\tthis.textAlert = 'Task successfully added';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.dismissCountDownGood = 0;\n\t\t\t\t\tthis.dismissCountDown = this.dismissSecs;\n\t\t\t\t\tthis.textAlert = this.getError;\n\t\t\t\t}\n\t\t\t},\n            async onSubmit() {\n                const title = this.title === undefined ? '' : this.title.trim();\n                const description = this.description === undefined ? '' : this.description.trim();\n\n                await fetch(`/api/todos`, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        user_id: this.getUser.id,\n                        title: title,\n                        description: description,\n                        completed: 'false'\n                    }),\n                    headers: {\n                        \"Content-type\": \"application/json; charset=UTF-8\"\n                    }\n                })\n                    .then(response => {\n                        if (response.status === 200) {\n                            response.json()\n                                .then(json => {\n                                    this.$store.dispatch('SET_ERROR', {type: 'add', error: null});\n                                    this.$store.dispatch('ADD_TODO', JSON.parse(json));\n                                    this.title = '';\n                                    this.description = '';\n                                    this.showAlert(true)\n                                });\n                        } else {\n                            response.json()\n                                .then(json => {\n                                    this.$store.dispatch('SET_ERROR', {type: 'add', error: json.error});\n                                    this.showAlert(false);\n                                });\n                        }\n                    })\n                    .catch(error => {\n                        this.$store.dispatch('SET_ERROR', {type:'add', error: error});\n                        this.showAlert(false);\n                    });\n            }\n        }\n    }\n</script>\n\n<style>\n\n    .my-rowcard {\n        min-height: calc(700px - 5vh - 3rem);\n        max-width: calc(100% - 50vw);\n    }\n\n    button {\n        float: left;\n    }\n\n    label {\n        float: left;\n    }\n\n</style>"]}]}