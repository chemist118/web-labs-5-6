{"remainingRequest":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\views\\LoginPage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\src\\components\\views\\LoginPage.vue","mtime":1575643814000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\otino\\Desktop\\WEB56\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpsYWJlbCB7CiAgICBmbG9hdDogbGVmdDsKfQoKLmNvbnRhaW5lciB7CiAgICBtaW4taGVpZ2h0OiBjYWxjKDcwMHB4IC0gNXZoIC0gM3JlbSk7CiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDEyLjVyZW0gLSA1dmgpOwogICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSA0MHZ3KTsKfQoK"},{"version":3,"sources":["LoginPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"LoginPage.vue","sourceRoot":"src/components/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <section class=\"card card-default w-50 mx-auto\">\n            <h4 class=\"card-header alert-info text-center\">Login</h4>\n\n            <form class=\"card-body\" @submit.prevent=\"onSubmit\">\n                <b-alert variant=\"danger\"\n                         :show=\"dismissCountDown\"\n\t\t\t\t\t\t dismissible fade\n                         @dismiss-count-down=\"countDownChanged\">\n                    {{ getError }}\n                </b-alert>\n\n                <div class=\"form-group\">\n                    <label for=\"login-input\">Username:</label>\n                    <input type=\"text\" name=\"login\" class=\"form-control\" id=\"login-input\" placeholder=\"Username\"\n                           v-model=\"login\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"password-input\">Password:</label>\n                    <input type=\"password\" name=\"password\" class=\"form-control\" id=\"password-input\" placeholder=\"******\"\n                           v-model=\"password\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary text-center\">Login to account</button>\n            </form>\n        </section>\n    </div>\n</template>\n\n\n<script>\n\n    export default {\n        name: 'Login',\n        data() {\n            return {\n                login: '',\n                password: '',\n                dismissSecs: 4,\n                dismissCountDown: 0\n            }\n        },\n        computed: {\n            getUser() {\n                return this.$store.getters.user;\n            },\n            getError() {\n                return this.$store.getters.loginError;\n            }\n        },\n        async created() {\n            if (this.getError !== null ) {\n                this.showAlert();\n                await setTimeout(function () {\n                    this.$store.dispatch('SET_ERROR', {type: 'login', error: null});\n                }.bind(this), 5000);\n            }\n        },\n        methods: {\n            countDownChanged(dismissCountDown) {\n                this.dismissCountDown = dismissCountDown\n            },\n            showAlert() {\n                this.dismissCountDown = this.dismissSecs\n            },\n            async onSubmit() {\n                let login = this.login === undefined ? '' : this.login.trim();\n                let password = this.password === undefined ? '' : this.password.trim();\n\n                await fetch(`/api/login?user_login=${login}&user_password=${password}`, {\n                    method: 'GET'\n                })\n                    .then(response => {\n                        if (response.status === 200) {\n                            response.json()\n                                .then(json => {\n                                    this.$store.dispatch('SET_ERROR', {type: 'login', error: null});\n                                    this.$store.dispatch('SET_USER', JSON.parse(json));\n                                    localStorage.id = this.getUser.id;\n                                    localStorage.login = this.getUser.login;\n                                    this.$router.push({path: '/home'});\n                                });\n                        } else {\n                            response.json()\n                                .then(json => {\n                                    this.$store.dispatch('SET_ERROR', {type: 'login', error: json.error});\n                                    this.showAlert();\n                                });\n                        }\n                    })\n                    .catch(error => {\n                        this.$store.dispatch('SET_ERROR', {type: 'login', error: error});\n                        this.showAlert();\n                    });\n            }\n        }\n    }\n</script>\n\n<style>\n\n    label {\n        float: left;\n    }\n\n    .container {\n        min-height: calc(700px - 5vh - 3rem);\n        height: calc(100% - 12.5rem - 5vh);\n        max-width: calc(100% - 40vw);\n    }\n\n</style>"]}]}